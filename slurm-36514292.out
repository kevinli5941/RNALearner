/home/kli3/.conda/envs/scbert/lib/python3.9/site-packages/torch/distributed/launch.py:180: FutureWarning: The module torch.distributed.launch is deprecated
and will be removed in future. Use torchrun.
Note that --use_env is set by default in torchrun.
If your script expects `--local_rank` argument to be set, please
change it to read from `os.environ['LOCAL_RANK']` instead. See 
https://pytorch.org/docs/stable/distributed.html#launch-utility for 
further instructions

  warnings.warn(
Test: [6 2] [ 1  3  4  0  8  5  7  9 10 11]
Train label:  tensor([1, 0])  Val label:  tensor([0, 0, 0, 0, 1, 0, 1, 1, 1, 1])
/panfs/ccds02/nobackup/people/kli3/RNALearner/performer_pytorch/performer_pytorch.py:115: UserWarning: torch.qr is deprecated in favor of torch.linalg.qr and will be removed in a future PyTorch release.
The boolean parameter 'some' has been replaced with a string parameter 'mode'.
Q, R = torch.qr(A, some)
should be replaced with
Q, R = torch.linalg.qr(A, 'reduced' if some else 'complete') (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2349.)
  q, r = torch.qr(unstructured_block.cpu(), some = True)
begin training
0 tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]], device='cuda:0') tensor([1, 0])
    ==  Epoch: 1 | Training Loss: 0.694647 | Accuracy: 50.0000%  ==
    ==  Epoch: 1 | Validation Loss: 0.694866 | Accuracy: 50.0000%  ==
[[0 5]
 [0 5]]
0 tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]], device='cuda:0') tensor([1, 0])
    ==  Epoch: 2 | Training Loss: 0.694647 | Accuracy: 50.0000%  ==
    ==  Epoch: 2 | Validation Loss: 0.694866 | Accuracy: 50.0000%  ==
[[0 5]
 [0 5]]
0 tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]], device='cuda:0') tensor([1, 0])
    ==  Epoch: 3 | Training Loss: 0.694647 | Accuracy: 50.0000%  ==
    ==  Epoch: 3 | Validation Loss: 0.694866 | Accuracy: 50.0000%  ==
[[0 5]
 [0 5]]
0 tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]], device='cuda:0') tensor([1, 0])
    ==  Epoch: 4 | Training Loss: 0.694647 | Accuracy: 50.0000%  ==
    ==  Epoch: 4 | Validation Loss: 0.694866 | Accuracy: 50.0000%  ==
[[0 5]
 [0 5]]
0 tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]], device='cuda:0') tensor([1, 0])
    ==  Epoch: 5 | Training Loss: 0.694647 | Accuracy: 50.0000%  ==
    ==  Epoch: 5 | Validation Loss: 0.694866 | Accuracy: 50.0000%  ==
[[0 5]
 [0 5]]
0 tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]], device='cuda:0') tensor([1, 0])
    ==  Epoch: 6 | Training Loss: 0.694647 | Accuracy: 50.0000%  ==
    ==  Epoch: 6 | Validation Loss: 0.694866 | Accuracy: 50.0000%  ==
[[0 5]
 [0 5]]
0 tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]], device='cuda:0') tensor([1, 0])
    ==  Epoch: 7 | Training Loss: 0.694647 | Accuracy: 50.0000%  ==
    ==  Epoch: 7 | Validation Loss: 0.694866 | Accuracy: 50.0000%  ==
[[0 5]
 [0 5]]
0 tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]], device='cuda:0') tensor([1, 0])
    ==  Epoch: 8 | Training Loss: 0.694647 | Accuracy: 50.0000%  ==
    ==  Epoch: 8 | Validation Loss: 0.694866 | Accuracy: 50.0000%  ==
[[0 5]
 [0 5]]
0 tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]], device='cuda:0') tensor([1, 0])
    ==  Epoch: 9 | Training Loss: 0.694647 | Accuracy: 50.0000%  ==
    ==  Epoch: 9 | Validation Loss: 0.694866 | Accuracy: 50.0000%  ==
[[0 5]
 [0 5]]
0 tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]], device='cuda:0') tensor([1, 0])
    ==  Epoch: 10 | Training Loss: 0.694647 | Accuracy: 50.0000%  ==
    ==  Epoch: 10 | Validation Loss: 0.694866 | Accuracy: 50.0000%  ==
[[0 5]
 [0 5]]
0 tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]], device='cuda:0') tensor([1, 0])
    ==  Epoch: 11 | Training Loss: 0.694647 | Accuracy: 50.0000%  ==
    ==  Epoch: 11 | Validation Loss: 0.694866 | Accuracy: 50.0000%  ==
[[0 5]
 [0 5]]
0 tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]], device='cuda:0') tensor([1, 0])
    ==  Epoch: 12 | Training Loss: 0.694647 | Accuracy: 50.0000%  ==
    ==  Epoch: 12 | Validation Loss: 0.694866 | Accuracy: 50.0000%  ==
[[0 5]
 [0 5]]
0 tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]], device='cuda:0') tensor([1, 0])
    ==  Epoch: 13 | Training Loss: 0.694647 | Accuracy: 50.0000%  ==
    ==  Epoch: 13 | Validation Loss: 0.694866 | Accuracy: 50.0000%  ==
[[0 5]
 [0 5]]
0 tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]], device='cuda:0') tensor([1, 0])
    ==  Epoch: 14 | Training Loss: 0.694647 | Accuracy: 50.0000%  ==
    ==  Epoch: 14 | Validation Loss: 0.694866 | Accuracy: 50.0000%  ==
[[0 5]
 [0 5]]
0 tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]], device='cuda:0') tensor([1, 0])
    ==  Epoch: 15 | Training Loss: 0.694647 | Accuracy: 50.0000%  ==
    ==  Epoch: 15 | Validation Loss: 0.694866 | Accuracy: 50.0000%  ==
[[0 5]
 [0 5]]
0 tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]], device='cuda:0') tensor([1, 0])
    ==  Epoch: 16 | Training Loss: 0.694647 | Accuracy: 50.0000%  ==
    ==  Epoch: 16 | Validation Loss: 0.694866 | Accuracy: 50.0000%  ==
[[0 5]
 [0 5]]
0 tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]], device='cuda:0') tensor([1, 0])
    ==  Epoch: 17 | Training Loss: 0.694647 | Accuracy: 50.0000%  ==
    ==  Epoch: 17 | Validation Loss: 0.694866 | Accuracy: 50.0000%  ==
[[0 5]
 [0 5]]
0 tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]], device='cuda:0') tensor([1, 0])
    ==  Epoch: 18 | Training Loss: 0.694647 | Accuracy: 50.0000%  ==
    ==  Epoch: 18 | Validation Loss: 0.694866 | Accuracy: 50.0000%  ==
[[0 5]
 [0 5]]
0 tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]], device='cuda:0') tensor([1, 0])
    ==  Epoch: 19 | Training Loss: 0.694647 | Accuracy: 50.0000%  ==
    ==  Epoch: 19 | Validation Loss: 0.694866 | Accuracy: 50.0000%  ==
[[0 5]
 [0 5]]
0 tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]], device='cuda:0') tensor([1, 0])
    ==  Epoch: 20 | Training Loss: 0.694647 | Accuracy: 50.0000%  ==
    ==  Epoch: 20 | Validation Loss: 0.694866 | Accuracy: 50.0000%  ==
[[0 5]
 [0 5]]
0 tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]], device='cuda:0') tensor([1, 0])
    ==  Epoch: 21 | Training Loss: 0.694647 | Accuracy: 50.0000%  ==
    ==  Epoch: 21 | Validation Loss: 0.694866 | Accuracy: 50.0000%  ==
[[0 5]
 [0 5]]
0 tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]], device='cuda:0') tensor([1, 0])
    ==  Epoch: 22 | Training Loss: 0.694647 | Accuracy: 50.0000%  ==
    ==  Epoch: 22 | Validation Loss: 0.694866 | Accuracy: 50.0000%  ==
[[0 5]
 [0 5]]
0 tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]], device='cuda:0') tensor([1, 0])
    ==  Epoch: 23 | Training Loss: 0.694647 | Accuracy: 50.0000%  ==
    ==  Epoch: 23 | Validation Loss: 0.694866 | Accuracy: 50.0000%  ==
[[0 5]
 [0 5]]
0 tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]], device='cuda:0') tensor([1, 0])
    ==  Epoch: 24 | Training Loss: 0.694647 | Accuracy: 50.0000%  ==
    ==  Epoch: 24 | Validation Loss: 0.694866 | Accuracy: 50.0000%  ==
[[0 5]
 [0 5]]
0 tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]], device='cuda:0') tensor([1, 0])
    ==  Epoch: 25 | Training Loss: 0.694647 | Accuracy: 50.0000%  ==
    ==  Epoch: 25 | Validation Loss: 0.694866 | Accuracy: 50.0000%  ==
[[0 5]
 [0 5]]
0 tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]], device='cuda:0') tensor([1, 0])
    ==  Epoch: 26 | Training Loss: 0.694647 | Accuracy: 50.0000%  ==
    ==  Epoch: 26 | Validation Loss: 0.694866 | Accuracy: 50.0000%  ==
[[0 5]
 [0 5]]
0 tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]], device='cuda:0') tensor([1, 0])
    ==  Epoch: 27 | Training Loss: 0.694647 | Accuracy: 50.0000%  ==
    ==  Epoch: 27 | Validation Loss: 0.694866 | Accuracy: 50.0000%  ==
[[0 5]
 [0 5]]
0 tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]], device='cuda:0') tensor([1, 0])
    ==  Epoch: 28 | Training Loss: 0.694647 | Accuracy: 50.0000%  ==
    ==  Epoch: 28 | Validation Loss: 0.694866 | Accuracy: 50.0000%  ==
[[0 5]
 [0 5]]
0 tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]], device='cuda:0') tensor([1, 0])
    ==  Epoch: 29 | Training Loss: 0.694647 | Accuracy: 50.0000%  ==
    ==  Epoch: 29 | Validation Loss: 0.694866 | Accuracy: 50.0000%  ==
[[0 5]
 [0 5]]
0 tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]], device='cuda:0') tensor([1, 0])
    ==  Epoch: 30 | Training Loss: 0.694647 | Accuracy: 50.0000%  ==
    ==  Epoch: 30 | Validation Loss: 0.694866 | Accuracy: 50.0000%  ==
[[0 5]
 [0 5]]
0 tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]], device='cuda:0') tensor([1, 0])
    ==  Epoch: 31 | Training Loss: 0.694647 | Accuracy: 50.0000%  ==
    ==  Epoch: 31 | Validation Loss: 0.694866 | Accuracy: 50.0000%  ==
[[0 5]
 [0 5]]
0 tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]], device='cuda:0') tensor([1, 0])
    ==  Epoch: 32 | Training Loss: 0.694647 | Accuracy: 50.0000%  ==
    ==  Epoch: 32 | Validation Loss: 0.694866 | Accuracy: 50.0000%  ==
[[0 5]
 [0 5]]
0 tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]], device='cuda:0') tensor([1, 0])
    ==  Epoch: 33 | Training Loss: 0.694647 | Accuracy: 50.0000%  ==
    ==  Epoch: 33 | Validation Loss: 0.694866 | Accuracy: 50.0000%  ==
[[0 5]
 [0 5]]
0 tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]], device='cuda:0') tensor([1, 0])
    ==  Epoch: 34 | Training Loss: 0.694647 | Accuracy: 50.0000%  ==
    ==  Epoch: 34 | Validation Loss: 0.694866 | Accuracy: 50.0000%  ==
[[0 5]
 [0 5]]
0 tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]], device='cuda:0') tensor([1, 0])
    ==  Epoch: 35 | Training Loss: 0.694647 | Accuracy: 50.0000%  ==
    ==  Epoch: 35 | Validation Loss: 0.694866 | Accuracy: 50.0000%  ==
[[0 5]
 [0 5]]
0 tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]], device='cuda:0') tensor([1, 0])
    ==  Epoch: 36 | Training Loss: 0.694647 | Accuracy: 50.0000%  ==
    ==  Epoch: 36 | Validation Loss: 0.694866 | Accuracy: 50.0000%  ==
[[0 5]
 [0 5]]
0 tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]], device='cuda:0') tensor([1, 0])
    ==  Epoch: 37 | Training Loss: 0.694647 | Accuracy: 50.0000%  ==
    ==  Epoch: 37 | Validation Loss: 0.694866 | Accuracy: 50.0000%  ==
[[0 5]
 [0 5]]
0 tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]], device='cuda:0') tensor([1, 0])
    ==  Epoch: 38 | Training Loss: 0.694647 | Accuracy: 50.0000%  ==
    ==  Epoch: 38 | Validation Loss: 0.694866 | Accuracy: 50.0000%  ==
[[0 5]
 [0 5]]
0 tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]], device='cuda:0') tensor([1, 0])
    ==  Epoch: 39 | Training Loss: 0.694647 | Accuracy: 50.0000%  ==
    ==  Epoch: 39 | Validation Loss: 0.694866 | Accuracy: 50.0000%  ==
[[0 5]
 [0 5]]
0 tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]], device='cuda:0') tensor([1, 0])
    ==  Epoch: 40 | Training Loss: 0.694647 | Accuracy: 50.0000%  ==
    ==  Epoch: 40 | Validation Loss: 0.694866 | Accuracy: 50.0000%  ==
[[0 5]
 [0 5]]
0 tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]], device='cuda:0') tensor([1, 0])
    ==  Epoch: 41 | Training Loss: 0.694647 | Accuracy: 50.0000%  ==
    ==  Epoch: 41 | Validation Loss: 0.694866 | Accuracy: 50.0000%  ==
[[0 5]
 [0 5]]
0 tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]], device='cuda:0') tensor([1, 0])
    ==  Epoch: 42 | Training Loss: 0.694647 | Accuracy: 50.0000%  ==
    ==  Epoch: 42 | Validation Loss: 0.694866 | Accuracy: 50.0000%  ==
[[0 5]
 [0 5]]
0 tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]], device='cuda:0') tensor([1, 0])
    ==  Epoch: 43 | Training Loss: 0.694647 | Accuracy: 50.0000%  ==
    ==  Epoch: 43 | Validation Loss: 0.694866 | Accuracy: 50.0000%  ==
[[0 5]
 [0 5]]
0 tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]], device='cuda:0') tensor([1, 0])
    ==  Epoch: 44 | Training Loss: 0.694647 | Accuracy: 50.0000%  ==
    ==  Epoch: 44 | Validation Loss: 0.694866 | Accuracy: 50.0000%  ==
[[0 5]
 [0 5]]
0 tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]], device='cuda:0') tensor([1, 0])
    ==  Epoch: 45 | Training Loss: 0.694647 | Accuracy: 50.0000%  ==
    ==  Epoch: 45 | Validation Loss: 0.694866 | Accuracy: 50.0000%  ==
[[0 5]
 [0 5]]
0 tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]], device='cuda:0') tensor([1, 0])
    ==  Epoch: 46 | Training Loss: 0.694647 | Accuracy: 50.0000%  ==
    ==  Epoch: 46 | Validation Loss: 0.694866 | Accuracy: 50.0000%  ==
[[0 5]
 [0 5]]
0 tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]], device='cuda:0') tensor([1, 0])
    ==  Epoch: 47 | Training Loss: 0.694647 | Accuracy: 50.0000%  ==
    ==  Epoch: 47 | Validation Loss: 0.694866 | Accuracy: 50.0000%  ==
[[0 5]
 [0 5]]
0 tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]], device='cuda:0') tensor([1, 0])
    ==  Epoch: 48 | Training Loss: 0.694647 | Accuracy: 50.0000%  ==
    ==  Epoch: 48 | Validation Loss: 0.694866 | Accuracy: 50.0000%  ==
[[0 5]
 [0 5]]
0 tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]], device='cuda:0') tensor([1, 0])
    ==  Epoch: 49 | Training Loss: 0.694647 | Accuracy: 50.0000%  ==
    ==  Epoch: 49 | Validation Loss: 0.694866 | Accuracy: 50.0000%  ==
[[0 5]
 [0 5]]
0 tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]], device='cuda:0') tensor([1, 0])
    ==  Epoch: 50 | Training Loss: 0.694647 | Accuracy: 50.0000%  ==
    ==  Epoch: 50 | Validation Loss: 0.694866 | Accuracy: 50.0000%  ==
[[0 5]
 [0 5]]
0 tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]], device='cuda:0') tensor([1, 0])
    ==  Epoch: 51 | Training Loss: 0.694647 | Accuracy: 50.0000%  ==
    ==  Epoch: 51 | Validation Loss: 0.694866 | Accuracy: 50.0000%  ==
[[0 5]
 [0 5]]
0 tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]], device='cuda:0') tensor([1, 0])
    ==  Epoch: 52 | Training Loss: 0.694647 | Accuracy: 50.0000%  ==
    ==  Epoch: 52 | Validation Loss: 0.694866 | Accuracy: 50.0000%  ==
[[0 5]
 [0 5]]
0 tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]], device='cuda:0') tensor([1, 0])
    ==  Epoch: 53 | Training Loss: 0.694647 | Accuracy: 50.0000%  ==
slurmstepd: error: *** JOB 36514292 ON gpu003 CANCELLED AT 2023-03-29T01:20:16 ***
WARNING:torch.distributed.elastic.agent.server.api:Received 15 death signal, shutting down workers
WARNING:torch.distributed.elastic.multiprocessing.api:Sending process 667583 closing signal SIGTERM
WARNING:torch.distributed.elastic.multiprocessing.api:Sending process 667583 closing signal SIGTERM
Traceback (most recent call last):
  File "/home/kli3/.conda/envs/scbert/lib/python3.9/site-packages/torch/distributed/elastic/agent/server/api.py", line 709, in run
    result = self._invoke_run(role)
  File "/home/kli3/.conda/envs/scbert/lib/python3.9/site-packages/torch/distributed/elastic/agent/server/api.py", line 850, in _invoke_run
    time.sleep(monitor_interval)
  File "/home/kli3/.conda/envs/scbert/lib/python3.9/site-packages/torch/distributed/elastic/multiprocessing/api.py", line 62, in _terminate_process_handler
    raise SignalException(f"Process {os.getpid()} got signal: {sigval}", sigval=sigval)
torch.distributed.elastic.multiprocessing.api.SignalException: Process 667580 got signal: 15

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/kli3/.conda/envs/scbert/lib/python3.9/runpy.py", line 197, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File "/home/kli3/.conda/envs/scbert/lib/python3.9/runpy.py", line 87, in _run_code
    exec(code, run_globals)
  File "/home/kli3/.conda/envs/scbert/lib/python3.9/site-packages/torch/distributed/launch.py", line 195, in <module>
    main()
  File "/home/kli3/.conda/envs/scbert/lib/python3.9/site-packages/torch/distributed/launch.py", line 191, in main
    launch(args)
  File "/home/kli3/.conda/envs/scbert/lib/python3.9/site-packages/torch/distributed/launch.py", line 176, in launch
    run(args)
  File "/home/kli3/.conda/envs/scbert/lib/python3.9/site-packages/torch/distributed/run.py", line 753, in run
    elastic_launch(
  File "/home/kli3/.conda/envs/scbert/lib/python3.9/site-packages/torch/distributed/launcher/api.py", line 132, in __call__
    return launch_agent(self._config, self._entrypoint, list(args))
  File "/home/kli3/.conda/envs/scbert/lib/python3.9/site-packages/torch/distributed/launcher/api.py", line 237, in launch_agent
    result = agent.run()
  File "/home/kli3/.conda/envs/scbert/lib/python3.9/site-packages/torch/distributed/elastic/metrics/api.py", line 129, in wrapper
    result = f(*args, **kwargs)
  File "/home/kli3/.conda/envs/scbert/lib/python3.9/site-packages/torch/distributed/elastic/agent/server/api.py", line 716, in run
    self._shutdown(e.sigval)
  File "/home/kli3/.conda/envs/scbert/lib/python3.9/site-packages/torch/distributed/elastic/agent/server/local_elastic_agent.py", line 289, in _shutdown
    self._pcontext.close(death_sig)
  File "/home/kli3/.conda/envs/scbert/lib/python3.9/site-packages/torch/distributed/elastic/multiprocessing/api.py", line 332, in close
    self._close(death_sig=death_sig, timeout=timeout)
  File "/home/kli3/.conda/envs/scbert/lib/python3.9/site-packages/torch/distributed/elastic/multiprocessing/api.py", line 709, in _close
    handler.proc.wait(time_to_wait)
  File "/home/kli3/.conda/envs/scbert/lib/python3.9/subprocess.py", line 1189, in wait
    return self._wait(timeout=timeout)
  File "/home/kli3/.conda/envs/scbert/lib/python3.9/subprocess.py", line 1911, in _wait
    time.sleep(delay)
  File "/home/kli3/.conda/envs/scbert/lib/python3.9/site-packages/torch/distributed/elastic/multiprocessing/api.py", line 62, in _terminate_process_handler
    raise SignalException(f"Process {os.getpid()} got signal: {sigval}", sigval=sigval)
torch.distributed.elastic.multiprocessing.api.SignalException: Process 667580 got signal: 15
